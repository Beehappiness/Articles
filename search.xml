<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[MySQL初探——列值转换成行值]]></title>
    <url>%2F2019%2F08%2F26%2FMySQL%E5%88%9D%E6%8E%A2%E2%80%94%E2%80%94%E5%88%97%E5%80%BC%E8%BD%AC%E6%8D%A2%E6%88%90%E8%A1%8C%E5%80%BC%2F</url>
    <content type="text"><![CDATA[当MySQL某个表中需要将列值按照某些条件转换成多个新列并将其值对应到以条件命名的各个新列中时，应该怎么处理呢？ 例如下表是原始数据，需要按行显示各部门各月份的业绩 Table 1 Month Department Yeji 一月份 01 10 一月份 02 10 一月份 03 5 三月份 03 8 二月份 02 8 二月份 04 9 Table 2： Department Dep_Name 01 国内业务一部 02 国内业务二部 03 国内业务三部 04 国际业务部 所需结果集： Dep_Name 一月份 二月份 三月份 国内业务一部 国内业务二部 国内业务三部 国际业务部 解决方案： case when 语句 1234567select distinct table2.Dep_Name,max(case Month when &apos;一月份&apos; then Yeji else null end) as &apos;一月份&apos;,max(case Month when &apos;二月份&apos; then Yeji else null end) as &apos;二月份&apos;,max(case Month when &apos;三月份&apos; then Yeji else null end) as &apos;三月份&apos;from table1, table2where table1.Dep_Name=table2.Dep_Namegroup by Dep_Name; 首先，选出所需的部门名称，再用case when 将Month列中的各月份转换成行（添加过滤条件：当筛选某月份时，显示Yeji中的值，否则显示NULL） 其次，将两个表按照Dep_Name关联，以完成select紧跟的部门的中文显示。 最后，将结果按照部门分组。 这里的case when 语法是： case [col_name] when [value1] then [result1] when [value2] then [result2] else [default] end 作用：按照条件选值 case when 的第二种用法： case when 列名 = 条件值1 then 选择项1 when 列名 = 条件值2 then 选择项2 else 默认值 end 作用：搜索相关条件然后输出值 可以将上例写成第二种用法的形式，得出同样结果。 下面的例子，只适用于第二种用法： 将符合某条件的值输出为期望的值 原始数据表： Score 语文 数学 英语 70 80 58 所需结果集：大于等于80则成绩“优秀”，60-80之间则成绩“及格”，低于60则为“不及格” 语文 数学 英语 及格 优秀 不及格 12345select(case when 语文 &gt;=80 then &apos;优秀&apos; when 语文 &gt;=60 then &apos;及格&apos; else &apos;不及格&apos; end) 语文,(case when 数学 &gt;=80 then &apos;优秀&apos; when 数学 &gt;=60 then &apos;及格&apos; else &apos;不及格&apos; end) 数学,(case when 英语 &gt;=80 then &apos;优秀&apos; when 英语 &gt;=60 then &apos;及格&apos; else &apos;不及格&apos; end) 英语from course; 首先，语文列中的值若大于等于80则输出“优秀”，60-80之间则为“及格”，小于60则为“不及格”，并命名该列为语文。数学列，英语列同理。 下一篇将介绍Row_number() over()的用法，以统计总和，观察连续天数，或者显示排名。]]></content>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github搭建个人博客步骤详解]]></title>
    <url>%2F2019%2F08%2F22%2FGithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%AD%A5%E9%AA%A4%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[#Github搭建个人博客步骤详解 Step 1: Github page 登录github后新建一个仓库： 填写必要信息： 进入setting: 然后往下拉，找到github pages，点击choose a theme选择主题： Step 2: Hexo 搭建博客 在安装hexo前需要安装git和node.js下载链接见：https://hexo.io/zh-cn/docs/ 完成如上两个安装步骤后在一个空文件夹单击右键，选择git bash here 在命令行中输入 npm install hexo -g 回车，来安装hexo。等待跳出新的绿色行后 输入hexo -v 检查是否安装成功。如下图即为安装成功 然后输入hexo init 初始化文件夹，完成后显示Start blogging with Hexo这串提示就说明安装成功啦 输入npm install 安装所需要的组件 Step3: 搭桥到github, 将Hexo于Github page 联系起来 分别执行： git config –global user.name “你的GitHub用户名” git config –global user.email “你的GitHub注册邮箱” 然后生成SSH秘钥,执行： ssh-keygen -t rsa -C “你的GitHub注册邮箱” 连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\Users\Administrator.ssh） 在c盘中找到秘钥所在文件夹，用记事本打开id_rsa文件，并复制全部内容 打开github网站，在头像下侧选择setting 选择SSH and GPG keys 并点击 new SSH key，并将刚才复制的文本粘贴后保存 在命令行中输入ssh -T git@github.com，测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了 Step4：HEXO部署 用coding编辑器打开 _config.yml文件 拉到最下面 按照如下图格式编辑后保存。特别注意冒号后必须有半角空格 deploy: type: git repo: git@github.com:自己的用户名/自己的用户名.github.io.git branch: master 回到git bash命令行，分别执行如下 hexo clean hexo generate hexo server 每回修改页面后都要进行部署Hexo这三步 然后输入npm install –save hexo-deployer-git 安装插件 之后输入hexo d -g 完成部署，看到红色的就表示成功完成部署！ 网页中输入http://yourgithubname.github.io 就能看到你的博客啦！！！ 大功告成！！]]></content>
  </entry>
</search>
